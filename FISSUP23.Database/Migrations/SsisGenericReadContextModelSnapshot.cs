// <auto-generated />
using System;
using FISSUP23.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FISSUP23.Database.Migrations
{
    [DbContext(typeof(SsisGenericReadContext))]
    partial class SsisGenericReadContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FISSUP23.Database.Models.Datatyp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short?>("Fig1")
                        .HasColumnType("smallint")
                        .HasColumnName("fig1");

                    b.Property<short?>("Fig2")
                        .HasColumnType("smallint")
                        .HasColumnName("fig2");

                    b.Property<bool?>("IsNullable")
                        .HasColumnType("bit")
                        .HasColumnName("is_nullable");

                    b.Property<short>("MaxLength")
                        .HasColumnType("smallint")
                        .HasColumnName("max_length");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte>("Precision")
                        .HasColumnType("tinyint")
                        .HasColumnName("precision");

                    b.Property<byte>("Scale")
                        .HasColumnType("tinyint")
                        .HasColumnName("scale");

                    b.Property<byte>("SystemTypeId")
                        .HasColumnType("tinyint")
                        .HasColumnName("system_type_id");

                    b.HasKey("Id")
                        .HasName("PK_Datatyper");

                    b.ToTable("Datatyp", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ErrorCode")
                        .HasColumnType("int");

                    b.Property<string>("ErrorText")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("InlasningId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tid")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Fil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivning")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("FilKollektionId")
                        .HasColumnType("int");

                    b.Property<short>("HarKolumnamn")
                        .HasColumnType("smallint");

                    b.Property<string>("KolumnSeparator")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MatchMonster")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilKollektionId");

                    b.ToTable("Fil", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.FilDatatyp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DatatypId")
                        .HasColumnType("int");

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<short?>("IsNullable")
                        .HasColumnType("smallint");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<int?>("Precision")
                        .HasColumnType("int");

                    b.Property<int?>("Scale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DatatypId");

                    b.HasIndex("FilId");

                    b.ToTable("Fil_Datatyp", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.FilKollektion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Andelse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Beskrivning")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("FilTypId")
                        .HasColumnType("int");

                    b.Property<string>("FolderArkiv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FolderFelaktigFil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FolderNyFil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FolderRoot")
                        .IsRequired()
                        .HasMaxLength(511)
                        .IsUnicode(false)
                        .HasColumnType("varchar(511)");

                    b.Property<string>("MatchMonster")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("OverforingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilTypId");

                    b.HasIndex("OverforingId");

                    b.ToTable("FilKollektion", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Filtyp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Andelse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Beskrivning")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PunktAndelse")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasComputedColumnSql("(concat('.',[Andelse]))", false);

                    b.HasKey("Id");

                    b.ToTable("Filtyp", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Inlasning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AntalRader")
                        .HasColumnType("int");

                    b.Property<int?>("AntalTillagdaKolumner")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumTid")
                        .HasColumnType("datetime");

                    b.Property<short?>("Dubblett")
                        .HasColumnType("smallint");

                    b.Property<int?>("ErrorLogId")
                        .HasColumnType("int");

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<string>("FilNamn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Namn")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<short?>("Omlasning")
                        .HasColumnType("smallint");

                    b.Property<short?>("RaderadData")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ErrorLogId");

                    b.HasIndex("FilId");

                    b.ToTable("Inlasning", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Kolumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<string>("InNamn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("InlasningId")
                        .HasColumnType("int");

                    b.Property<short?>("NyKolumn")
                        .HasColumnType("smallint");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("UtNamn")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FilId");

                    b.HasIndex("InlasningId");

                    b.ToTable("Kolumn", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.KolumnDatatyp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DatatypId")
                        .HasColumnType("int");

                    b.Property<short?>("IsNullable")
                        .HasColumnType("smallint");

                    b.Property<int>("KolumnId")
                        .HasColumnType("int");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<int?>("Precision")
                        .HasColumnType("int");

                    b.Property<int?>("Scale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DatatypId");

                    b.HasIndex("KolumnId");

                    b.ToTable("Kolumn_Datatyp", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Logg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AktuellFil")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("FilId")
                        .HasColumnType("int");

                    b.Property<int?>("FilkollektionId")
                        .HasColumnType("int");

                    b.Property<string>("Handelse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("InlasningId")
                        .HasColumnType("int");

                    b.Property<string>("Loggtext")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("OverforingId")
                        .HasColumnType("int");

                    b.Property<string>("SokFil")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Tid")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Logg", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Lookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<int>("LookupTypId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilId");

                    b.HasIndex("LookupTypId");

                    b.ToTable("Lookup", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.LookupKolumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KolumnId")
                        .HasColumnType("int");

                    b.Property<int>("LookupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KolumnId");

                    b.HasIndex("LookupId");

                    b.ToTable("Lookup_Kolumn", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.LookupTyp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_LookupType");

                    b.ToTable("LookupTyp", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.NyOverforing", b =>
                {
                    b.Property<string>("Beskrivning")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Namn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SystemNamn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("NyOverforing", "temp");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Overforing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivning")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SystemNamn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Overforing", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.RawDataKolumner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<int>("InlasningId")
                        .HasColumnType("int")
                        .HasColumnName("InlasningID");

                    b.Property<string>("RawData")
                        .HasMaxLength(2047)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2047)");

                    b.HasKey("Id");

                    b.HasIndex("FilId");

                    b.HasIndex("InlasningId");

                    b.ToTable("RawDataKolumner", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.RawDataParsed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<int>("InlasningId")
                        .HasColumnType("int")
                        .HasColumnName("InlasningID");

                    b.Property<int>("KolumnId")
                        .HasColumnType("int");

                    b.Property<int?>("RawDataId")
                        .HasColumnType("int");

                    b.Property<string>("RawDataParsed1")
                        .HasMaxLength(2047)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2047)")
                        .HasColumnName("RawDataParsed");

                    b.HasKey("Id");

                    b.HasIndex("FilId");

                    b.HasIndex("InlasningId");

                    b.ToTable("RawDataParsed", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.RawDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<int>("InlasningId")
                        .HasColumnType("int")
                        .HasColumnName("InlasningID");

                    b.Property<string>("RawData")
                        .HasMaxLength(2047)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2047)");

                    b.HasKey("Id");

                    b.HasIndex("FilId");

                    b.HasIndex("InlasningId");

                    b.ToTable("RawData", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Tabell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivning")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("FilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modifierad")
                        .HasColumnType("datetime");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SkapadInlasningId")
                        .HasColumnType("int")
                        .HasColumnName("Skapad_InlasningId");

                    b.Property<string>("TabellNamn")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(517)
                        .HasColumnType("nvarchar(517)")
                        .HasComputedColumnSql("(concat_ws('.',quotename([Schema]),quotename([Namn])))", false);

                    b.Property<string>("VyNamn")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(517)
                        .HasColumnType("nvarchar(517)")
                        .HasComputedColumnSql("(concat_ws('.',quotename([VySchema]),quotename(concat([VyPrefix],[Namn]))))", false);

                    b.Property<string>("VyNamnLookup")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(517)
                        .HasColumnType("nvarchar(517)")
                        .HasComputedColumnSql("(concat_ws('.',quotename([VySchema]),quotename(concat([VyPrefix],[Namn],'_LookUp'))))", false);

                    b.Property<string>("VyPrefix")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VySchema")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FilId");

                    b.HasIndex("SkapadInlasningId");

                    b.ToTable("Tabell", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Test", b =>
                {
                    b.Property<DateTime>("DatumTid")
                        .HasColumnType("datetime");

                    b.Property<string>("SystemNamn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Test", "import");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Fil", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.FilKollektion", "FilKollektion")
                        .WithMany("Fils")
                        .HasForeignKey("FilKollektionId")
                        .IsRequired()
                        .HasConstraintName("FK_Fil_FilKollektion");

                    b.Navigation("FilKollektion");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.FilDatatyp", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Datatyp", "Datatyp")
                        .WithMany("FilDatatyps")
                        .HasForeignKey("DatatypId")
                        .IsRequired()
                        .HasConstraintName("FK_Fil_Datatyp_Datatyper");

                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("FilDatatyps")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_Fil_Datatyp_Kolumn");

                    b.Navigation("Datatyp");

                    b.Navigation("Fil");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.FilKollektion", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Filtyp", "FilTyp")
                        .WithMany("FilKollektions")
                        .HasForeignKey("FilTypId")
                        .IsRequired()
                        .HasConstraintName("FK_FilKollektion_Filtyp");

                    b.HasOne("FISSUP23.Database.Models.Overforing", "Overforing")
                        .WithMany("FilKollektions")
                        .HasForeignKey("OverforingId")
                        .IsRequired()
                        .HasConstraintName("FK_FilKollektion_Overforing");

                    b.Navigation("FilTyp");

                    b.Navigation("Overforing");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Inlasning", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.ErrorLog", "ErrorLog")
                        .WithMany("Inlasnings")
                        .HasForeignKey("ErrorLogId")
                        .HasConstraintName("FK_Inlasning_ErrorLog");

                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("Inlasnings")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_Inlasning_Fil");

                    b.Navigation("ErrorLog");

                    b.Navigation("Fil");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Kolumn", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("Kolumns")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_Kolumn_Fil");

                    b.HasOne("FISSUP23.Database.Models.Inlasning", "Inlasning")
                        .WithMany("Kolumns")
                        .HasForeignKey("InlasningId")
                        .HasConstraintName("FK_Kolumn_Inlasning");

                    b.Navigation("Fil");

                    b.Navigation("Inlasning");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.KolumnDatatyp", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Datatyp", "Datatyp")
                        .WithMany("KolumnDatatyps")
                        .HasForeignKey("DatatypId")
                        .IsRequired()
                        .HasConstraintName("FK_Kolumn_Datatyp_Datatyper");

                    b.HasOne("FISSUP23.Database.Models.Kolumn", "Kolumn")
                        .WithMany("KolumnDatatyps")
                        .HasForeignKey("KolumnId")
                        .IsRequired()
                        .HasConstraintName("FK_Kolumn_Datatyp_Kolumn");

                    b.Navigation("Datatyp");

                    b.Navigation("Kolumn");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Lookup", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("Lookups")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_Lookup_Fil");

                    b.HasOne("FISSUP23.Database.Models.LookupTyp", "LookupTyp")
                        .WithMany("Lookups")
                        .HasForeignKey("LookupTypId")
                        .IsRequired()
                        .HasConstraintName("FK_Lookup_LookupTyp");

                    b.Navigation("Fil");

                    b.Navigation("LookupTyp");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.LookupKolumn", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Kolumn", "Kolumn")
                        .WithMany("LookupKolumns")
                        .HasForeignKey("KolumnId")
                        .IsRequired()
                        .HasConstraintName("FK_Lookup_Kolumn_Kolumn");

                    b.HasOne("FISSUP23.Database.Models.Lookup", "Lookup")
                        .WithMany("LookupKolumns")
                        .HasForeignKey("LookupId")
                        .IsRequired()
                        .HasConstraintName("FK_Lookup_Kolumn_Lookup");

                    b.Navigation("Kolumn");

                    b.Navigation("Lookup");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.RawDataKolumner", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("RawDataKolumners")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_RawDataKolumner_Fil");

                    b.HasOne("FISSUP23.Database.Models.Inlasning", "Inlasning")
                        .WithMany("RawDataKolumners")
                        .HasForeignKey("InlasningId")
                        .IsRequired()
                        .HasConstraintName("FK_RawDataKolumner_Inlasning");

                    b.Navigation("Fil");

                    b.Navigation("Inlasning");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.RawDataParsed", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("RawDataParseds")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_RawDataParsed_Fil");

                    b.HasOne("FISSUP23.Database.Models.Inlasning", "Inlasning")
                        .WithMany("RawDataParseds")
                        .HasForeignKey("InlasningId")
                        .IsRequired()
                        .HasConstraintName("FK_RawDataParsed_Inlasning");

                    b.Navigation("Fil");

                    b.Navigation("Inlasning");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.RawDatum", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("RawData")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_RawData_Fil");

                    b.HasOne("FISSUP23.Database.Models.Inlasning", "Inlasning")
                        .WithMany("RawData")
                        .HasForeignKey("InlasningId")
                        .IsRequired()
                        .HasConstraintName("FK_RawData_Inlasning");

                    b.Navigation("Fil");

                    b.Navigation("Inlasning");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Tabell", b =>
                {
                    b.HasOne("FISSUP23.Database.Models.Fil", "Fil")
                        .WithMany("Tabells")
                        .HasForeignKey("FilId")
                        .IsRequired()
                        .HasConstraintName("FK_Tabell_Fil");

                    b.HasOne("FISSUP23.Database.Models.Inlasning", "SkapadInlasning")
                        .WithMany("Tabells")
                        .HasForeignKey("SkapadInlasningId")
                        .HasConstraintName("FK_Tabell_Inlasning");

                    b.Navigation("Fil");

                    b.Navigation("SkapadInlasning");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Datatyp", b =>
                {
                    b.Navigation("FilDatatyps");

                    b.Navigation("KolumnDatatyps");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.ErrorLog", b =>
                {
                    b.Navigation("Inlasnings");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Fil", b =>
                {
                    b.Navigation("FilDatatyps");

                    b.Navigation("Inlasnings");

                    b.Navigation("Kolumns");

                    b.Navigation("Lookups");

                    b.Navigation("RawData");

                    b.Navigation("RawDataKolumners");

                    b.Navigation("RawDataParseds");

                    b.Navigation("Tabells");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.FilKollektion", b =>
                {
                    b.Navigation("Fils");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Filtyp", b =>
                {
                    b.Navigation("FilKollektions");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Inlasning", b =>
                {
                    b.Navigation("Kolumns");

                    b.Navigation("RawData");

                    b.Navigation("RawDataKolumners");

                    b.Navigation("RawDataParseds");

                    b.Navigation("Tabells");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Kolumn", b =>
                {
                    b.Navigation("KolumnDatatyps");

                    b.Navigation("LookupKolumns");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Lookup", b =>
                {
                    b.Navigation("LookupKolumns");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.LookupTyp", b =>
                {
                    b.Navigation("Lookups");
                });

            modelBuilder.Entity("FISSUP23.Database.Models.Overforing", b =>
                {
                    b.Navigation("FilKollektions");
                });
#pragma warning restore 612, 618
        }
    }
}
